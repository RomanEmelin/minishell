Index: Makefile
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>NAME = minishell\nCC = gcc\nFLAGS = -Wall -Werror -Wextra\n\nSRCS_DIR = ./srcs/\nLIBFT_DIR   = $(SRCS_DIR)libft/\nPARSER_DIR   = $(SRCS_DIR)parser/\n\nHEADERS = ./includes/\n\nSRCS_ALL = $(addprefix $(SRCS_DIR), )#ADD ALL FILES IN ./srcs/\nSRC_PARSER = $(addprefix $(PARSER_DIR), )#ADD ALL FILES IN ./srcs/parser/\n\nOBJ_ALL = $(SRCS_ALL:.c=.o)\nOBJ_PARSER = $(SRC_PARSER:.c=.o)\n\nSRCS = $(SRCS_ALL) $(SRC_PARSER)\n\nOBJS = $(OBJ_ALL) $(OBJ_PARSER)\n\nall:$(NAME)\n\n$(NAME): $(OBJS)\n\t@make -C $(LIBFT_DIR)\n\t@gcc -I$(HEADERS) $(OBJS) $(FLAGS) $(LIBFT_DIR)/libft.a libmlx.dylib -o $(NAME)\n\n$(OBJ_PARSER): %.o: %.c $(HEADERS)\n\t$(CC) $(CFLAGS) -I$(HEADERS) -c $< -o $@\n\n$(OBJ_ALL): %.o: %.c $(HEADERS)\n\t$(CC) $(CFLAGS) -I$(HEADERS) -I $(LIBFT_DIR) -c $< -o $@\n\n%.o:%.c%$(HEADERS)\n\t$(CC) $(FLAGS) -o I$(HEADER)  $@ -c $<\n\nclean:\n\t@rm -rf *.o\n\t@rm -f $(PARSER_DIR)/*.o\n\t@rm -f $(SRCS_DIR)/*.o\n\t@make -C $(LIBFT_DIR) clean\n\t@echo Objects files deleted!\n\nfclean: clean\n\t@rm -f $(NAME)\n\t@make -C $(LIBFT_DIR) fclean\n\nnorme:\n\tnorminette ./engine/*.c ./includes/libft.h includes/cub3d.h includes/parser.h \\\n\t./mlx_helper/*.c parser/*.c libft/*.c libft/*.h\n\nforbidden:\n\tcat ./engine/*.c ./includes/libft.h includes/cub3d.h includes/parser.h \\\n        \t./mlx_helper/*.c parser/*.c libft/*.c libft/*.h | grep \"printf\"\n\nre: fclean all\n\n.PHONY: all objs clean fclean re
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Makefile	(revision e98b51797dcc43456d40e11dc9b4a1e1fa631154)
+++ Makefile	(date 1611577030000)
@@ -22,7 +22,7 @@
 
 $(NAME): $(OBJS)
 	@make -C $(LIBFT_DIR)
-	@gcc -I$(HEADERS) $(OBJS) $(FLAGS) $(LIBFT_DIR)/libft.a libmlx.dylib -o $(NAME)
+	@gcc -I$(HEADERS) $(OBJS) $(FLAGS) $(LIBFT_DIR)/libft.a -o $(NAME)
 
 $(OBJ_PARSER): %.o: %.c $(HEADERS)
 	$(CC) $(CFLAGS) -I$(HEADERS) -c $< -o $@
Index: includes/minishell.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#ifndef MINISHELL_MINISHELL_H\n# define MINISHELL_MINISHELL_H\n\n# include <stdio.h>\n# include <stdlib.h>\n# include <errno.h>\n# include <unistd.h>\n# include <sys/types.h>\n# include <sys/wait.h>\n# include <signal.h>\n# include \"libft.h\"\n\n#endif\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- includes/minishell.h	(revision e98b51797dcc43456d40e11dc9b4a1e1fa631154)
+++ includes/minishell.h	(date 1611578399000)
@@ -10,4 +10,6 @@
 # include <signal.h>
 # include "libft.h"
 
+
+
 #endif
Index: tests/test_signals.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- tests/test_signals.c	(date 1611592538000)
+++ tests/test_signals.c	(date 1611592538000)
@@ -0,0 +1,17 @@
+#include <stdio.h>
+#include <string.h>
+#include <stdlib.h>
+#include "../srcs/libft/libft.h"
+
+/*!
+ * От пользователя - с клавиатуры терминала можно нажимом некоторых клавиш послать сигналы SIGINT и SIGQUIT.
+ * Собственно, сигнал посылается драйвером терминала при получении им с клавиатуры определенных символов.
+ * Так можно прервать зациклившуюся или надоевшую программу.
+ */
+
+
+
+int main(int ac, char **av, char **env)
+{
+
+}
\ No newline at end of file
Index: CMakeLists.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- CMakeLists.txt	(date 1611579875000)
+++ CMakeLists.txt	(date 1611579875000)
@@ -0,0 +1,10 @@
+cmake_minimum_required(VERSION 3.17)
+project(minishell1 C)
+
+set(CMAKE_C_STANDARD 11)
+
+include_directories(includes)
+include_directories(srcs/libft)
+
+add_executable(minishell1
+        tests/test_signals.c)
